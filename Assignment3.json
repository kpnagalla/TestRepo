{
	"info": {
		"_postman_id": "8aa94b6a-2047-4046-9d45-5d560353bdab",
		"name": "Assignment3",
		"description": "GET positive and negative",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET Schema Validation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "329884da-7f0b-406e-aff3-951aff7e6443",
						"exec": [
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = {\r",
							"    \"required\": [\r",
							"        \"data\",\r",
							"        \"ad\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"data\": {\r",
							"            \"required\": [\r",
							"                \"id\",\r",
							"                \"email\",\r",
							"                \"first_name\",\r",
							"                \"last_name\",\r",
							"                \"avatar\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"id\": {\r",
							"                    \"$id\": \"#/properties/data/properties/id\",\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"                \"email\": {\r",
							"                    \"$id\": \"#/properties/data/properties/email\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"first_name\": {\r",
							"                    \"$id\": \"#/properties/data/properties/first_name\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"last_name\": {\r",
							"                    \"$id\": \"#/properties/data/properties/last_name\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"avatar\": {\r",
							"                    \"$id\": \"#/properties/data/properties/avatar\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"$id\": \"#/properties/data\",\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"ad\": {\r",
							"            \"required\": [\r",
							"                \"company\",\r",
							"                \"url\",\r",
							"                \"text\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"company\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/company\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"url\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/url\",\r",
							"                    \"type\": \"string\"\r",
							"                },\r",
							"                \"text\": {\r",
							"                    \"$id\": \"#/properties/ad/properties/text\",\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"$id\": \"#/properties/ad\",\r",
							"            \"type\": \"object\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"}\r",
							"\r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post Schema Validation and Tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b024fe4e-2c49-44f3-bcf9-7e899b54257f",
						"exec": [
							"var Ajv = require('ajv'),\r",
							"    ajv = new Ajv({logger: console}),\r",
							"    schema = \r",
							"      {\r",
							"    \"required\": [\r",
							"        \"title\",\r",
							"        \"body\",\r",
							"        \"userId\",\r",
							"        \"id\",\r",
							"        \"createdAt\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"title\": {\r",
							"            \"$id\": \"#/properties/title\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"body\": {\r",
							"            \"$id\": \"#/properties/body\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"userId\": {\r",
							"            \"$id\": \"#/properties/userId\",\r",
							"            \"type\": \"integer\"\r",
							"        },\r",
							"        \"id\": {\r",
							"            \"$id\": \"#/properties/id\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"createdAt\": {\r",
							"            \"$id\": \"#/properties/createdAt\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"$id\": \"http://example.org/root.json#\",\r",
							"    \"type\": \"object\",\r",
							"    \"definitions\": {},\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema#\"\r",
							"}\r",
							"\r",
							" \r",
							"pm.test('Schema is valid', function() {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(ajv.validate(schema, data)).to.be.true;\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"POST positive case\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Krishna\");\r",
							"});\r",
							"\r",
							"pm.test(\"Negative case for POST: \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.equal('1003');\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"title\": \"Krishna\",\r\n      \"body\": \"Priyanka\",\r\n      \"userId\": 1003\r\n}"
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete TC003",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "https://reqres.in/api/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7bf64540-97ac-4c62-8234-be201fb5a0de",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Positive case for GET method: Expected Janet data for first_name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data[1].first_name).to.equal('Janet');\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Negative case for GET method\", function() {\r",
							"    var jsonData2 = pm.response.json();\r",
							"    pm.expect(jsonData2.data[0].last_name).to.equal(\"Eve\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				},
				"description": "Get positive and negative case"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}